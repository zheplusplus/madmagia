_t_: mad.gettext

jQuery(document).ready(%)

jQuery('#edit-segment-fillspan-cb').change((): jQuery('#edit-segment-fillspan-in').prop('disabled', !@checked))

SELECT_FILTERS: {
    hflip: (): jQuery('#edit-segment-hflip-cb').prop('checked', true),
    repeatframe: (): jQuery('#edit-segment-repeatframe-cb').prop('checked', true),
    fillspan: (t):
        jQuery('#edit-segment-fillspan-cb').prop('checked', true)
        jQuery('#edit-segment-fillspan-in').prop('disabled', false).val(t)
    ,
}

func getFilters()
    f: []
    if jQuery('#edit-segment-hflip-cb').is(':checked')
        f.push(['hflip', null])
    if jQuery('#edit-segment-repeatframe-cb').is(':checked')
        f.push(['repeatframe', null])
    if jQuery('#edit-segment-fillspan-cb').is(':checked')
        f.push(['fillspan', parseFloat(jQuery('#edit-segment-fillspan-in').val())])
    return f

frameTime: jQuery('.edit-segment-frame-time')
frameTime.time: 0
frameTime.setTime: (time):
    @time: time if time >=0 else 0
    @text(mad.formatTime(@time))
    displayFrame(@time)
frameTime.incTime: (delta): @setTime(parseFloat(delta) + @time)

segStartInput: jQuery('#edit-segment-start').blur(():
    start: mad.parseTime(jQuery(@).val())
    if isNaN(start)
        return jQuery('#edit-seg-error-feedback').text(_t_('edit_invalid_time'))
    frameTime.setTime(start)
)

func editSegment(segment, sectionDuration, cb)
    editDiv: jQuery('#edit-segment-panel').detach()
    panel: mad.createOverlapPanel().append(editDiv.show())

    editDiv.find(':checkbox').prop('checked', false)
    editDiv.find('input').val('')
    jQuery('#edit-segment-fillspan-in').prop('disabled', true)
    jQuery('#edit-seg-error-feedback').text('')

    func quit()
        editDiv.detach()
        jQuery(document.body).append(editDiv.hide())
        panel.quit()

    jQuery('#edit-segment-quit').unbind('click').click(quit)
    jQuery('#edit-section-duration').text(mad.formatTime(sectionDuration))
    jQuery('#edit-segment-confirm').unbind('click').click(():
        start: mad.parseTime(segStartInput.val())
        if isNaN(start)
            segStartInput.focus()
            return jQuery('#edit-seg-error-feedback').text(_t_('edit_invalid_time'))
        duration: parseFloat(jQuery('#edit-segment-duration').val())
        if isNaN(duration)
            jQuery('#edit-segment-duration').focus()
            return jQuery('#edit-seg-error-feedback').text(_t_('edit_invalid_num'))
        quit()
        cb({
            epnum: parseFloat(jQuery('#edit-segment-epnum-selector :selected').val()),
            start: start,
            duration: duration,
            filters: getFilters(),
        })
    )

    if segment.epnum
        jQuery('#edit-segment-epnum-selector option[value="' + segment.epnum + '"]').attr('selected', 'selected')
        frameTime.setTime(segment.start)
        segStartInput.val(mad.formatTime(segment.start))
        jQuery('#edit-segment-duration').val(segment.duration)

        segment.filters |:
            sf: SELECT_FILTERS[$[0]]
            if sf
                sf($[1])

    if !segment || segment.start != mad.parseTime(mad.formatTime(frameTime.time))
        jQuery('#edit-segment-use-as-start').addClass('btn-primary')

func currentVideoFile()
    epnum: parseFloat(jQuery('#edit-segment-epnum-selector :selected').val())
    return [epnum, mad.workspace.findSourceByEpnum(epnum)]

func displayFrame(time)
    img: jQuery('#edit-segment-frame-viewer')
    img.attr('src', '/frame/loading')
    epnum_n_video: currentVideoFile()
    jQuery.post('/frame/gen', {
        epnum: epnum_n_video[0],
        time: time,
        source_path: epnum_n_video[1],
        output_path: mad.workspace.getOutputPath(),
    }, %r)
    img.attr('src', '/frame/?path=' + encodeURIComponent(r))

jQuery('#edit-segment-epnum-selector').change((): frameTime.incTime(0))
jQuery('#edit-segment-panel .mm-time-spanner-btn').click(():
    frameTime.incTime(jQuery(@).data('span'))
    if frameTime.time != mad.parseTime(segStartInput.val())
        jQuery('#edit-segment-use-as-start').addClass('btn-primary')
    else
        jQuery('#edit-segment-use-as-start').removeClass('btn-primary')
)
jQuery('#edit-segment-use-as-start').click((): segStartInput.val(mad.formatTime(frameTime.time)))

jQuery('#edit-segment-play').click(():
    mad.player.video(currentVideoFile()[1], %r)
    if r != null
        frameTime.setTime(r)
)

secError: (input, err):
    input.focus()
    jQuery('#edit-sec-error-feedback').text(err)

secNameInput: jQuery('#edit-section-name')
secStartInput: jQuery('#edit-section-start')
secEndInput: jQuery('#edit-section-end')

jQuery('#edit-section-start-spanners .mm-time-spanner-btn').click(():
    secStartInput.incTime(jQuery(@).data('span'))
)

jQuery('#edit-section-end-spanners .mm-time-spanner-btn').click(():
    secEndInput.incTime(jQuery(@).data('span'))
)

func editSection(section, prevSec, nextSec, audioPath, outputPath, cb)
    editDiv: jQuery('#edit-section-panel').detach()
    panel: mad.createOverlapPanel().append(editDiv.show())

    console.log(audioPath, outputPath)
    func quit(sec)
        editDiv.detach()
        jQuery(document.body).append(editDiv.hide())
        panel.quit()
        cb(sec)
    jQuery('#edit-section-quit').unbind('click').click((): quit(null))
    jQuery('#edit-sec-error-feedback').text('')

    jQuery('#edit-prev-section-start').text(mad.formatTime(prevSec.start))
    nextStart: nextSec.start if nextSec else mad.workspace.audioLen()
    jQuery('#edit-next-section-start').text(mad.formatTime(nextStart))

    jQuery('#edit-section-play-audio').unbind('click').click(():
        mad.player.audio(audioPath, outputPath,
                         secStartInput.timeVal(),
                         secEndInput.timeVal() - secStartInput.timeVal())
    )

    secEndInput.val(mad.formatTime(nextStart))
    secStartInput.timeVal: (): mad.parseTime(@val()) if @val() else prevSec.start
    secEndInput.timeVal: (): mad.parseTime(@val())

    secStartInput.incTime: (delta):
        time: @timeVal() + delta
        if isNaN(time)
            return secError(@, _t_('edit_invalid_num'))
        if time < prevSec.start
            return @val(mad.formatTime(prevSec.start))
        if time > secEndInput.timeVal()
            return @val(secEndInput.val())
        @val(mad.formatTime(time))

    secEndInput.incTime: (delta):
        time: mad.parseTime(@val()) + delta
        if isNaN(time)
            return secError(@, _t_('edit_invalid_num'))
        if time < secStartInput.timeVal()
            return @val(mad.formatTime(secStartInput.timeVal()))
        if time > nextStart
            return @val(mad.formatTime(nextStart))
        @val(mad.formatTime(time))

    secSubInput: jQuery('#edit-section-sub')
    if section != null
        secNameInput.val(section.name)
        secStartInput.val(mad.formatTime(section.start))
        secSubInput.val(section.sub)
    else
        secNameInput.val(_t_('default_new_section_name_prefix') + *Date().getTime())

    secNameInput.focus()

    jQuery('#edit-section-confirm').unbind('click').click(():
        name: secNameInput.val()
        if name.length = 0 || name.indexOf(':') != -1
            return secError(secNameInput, _t_('bad_section_name'))
        start: mad.parseTime(secStartInput.val())
        if isNaN(start)
            return secError(secStartInput, _t_('edit_invalid_num'))
        end: mad.parseTime(secEndInput.val())
        if isNaN(end)
            return secError(secEndInput, _t_('edit_invalid_num'))
        if start < prevSec.start || start >= end || end > nextStart
            return secError(secStartInput, _t_('section_time_out_of_range'))
        quit({
            name: name,
            start: start,
            end: end,
            sub: secSubInput.val()
        })
    )

export mad.edit.createSegment: (sectionDuration, cb): editSegment({}, sectionDuration, cb)
export mad.edit.editSegment: editSegment
export mad.edit.createSection: (triggerSec, audioPath, outputPath, cb): editSection(
    null, triggerSec, triggerSec.nextSection(), audioPath, outputPath, cb)
export mad.edit.editSection: (sec, audioPath, outputPath, cb): editSection(
    sec, sec.prevSection(), sec.nextSection(), audioPath, outputPath, cb)
export mad.edit.syncEpnums: (ls):
    s: jQuery('#edit-segment-epnum-selector').html('')
    ls |: s.append(jQuery('<option>').text($).val($))
