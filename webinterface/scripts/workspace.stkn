_t_: mad.gettext

FILTERS_DISPLAY: {
    hflip: (): [],
    repeatframe: (): [],
    fillspan: (time): [parseFloat(time)],
}

func getAVLen(path, %%)
    jQuery.get('/info/len/', {path: path}, %r)
    return r

func getVideoMap(path, %%)
    jQuery.get('/info/videols/', {path: path}, %r)
    return r

func getSequence(path, %%)
    jQuery.get('/seqc/get/', {path: path}, %r)
    return r

func newSegment(epnum, start, duration, filters, parent)
    epnumTag: jQuery('<span>').addClass('mm-seg-el')
    startTag: jQuery('<span>').addClass('mm-seg-el')
    durationTag: jQuery('<span>').addClass('mm-seg-el')
    filtersArea: jQuery('<div>')

    div: jQuery('<div>').addClass('mm-segment').
                         append(epnumTag).
                         append(startTag).
                         append(durationTag).
                         append(filtersArea).
                         click(():
                             if !jQuery(parent).hasClass('in-edit')
                                return
                             mad.edit.editSegment(@, parent.duration(), %s)
                             if s
                                 set(s.epnum, s.start, s.duration, s.filters)
                         )[0]

    func set(epnum, start, duration, filters)
        div.epnum: epnum
        epnumTag.text(epnum)
        div.start: start
        startTag.text(mad.formatTime(start))
        div.duration: duration
        durationTag.text(duration)
        div.filters: filters
        filtersArea.html('').append(filters |:
            fd: FILTERS_DISPLAY[$[0]]
            if fd
                $result.push((name, args):
                    f: jQuery('<div>').addClass('mm-seg-filter').append(
                        jQuery('<span>').addClass('mm-seg-el').
                                         text(_t_('seg_filter_' + name)))
                    fd(args) |: f.append(jQuery('<span>').addClass('mm-seg-el').text($))
                    return f
                ($[0], $[1]))
        )

    set(epnum, start, duration, filters)
    div.tojson: (): {
        epnum: div.epnum,
        start: div.start,
        duration: div.duration,
        filters: div.filters,
    }
    return div

func newSection(name, start, sub)
    func addSegmentButton()
        btn: mad.createPriButton(_t_('new_segment')).addClass('ws-add-segment')
        btn.click(():
            mad.edit.createSegment(sec.duration(), %s)
            if s
                sec.addSegment(newSegment(s.epnum, s.start, s.duration, s.filters, sec), btn)
        )
        return btn

    nameTag: jQuery('<div>').addClass('mm-sec-name').text(name)
    startTag: jQuery('<div>').addClass('mm-sec-start').text(mad.formatTime(start))
    editEnable: mad.createPriButton(_t_('section_enable_edit')).addClass('section-edit-enable').css('float', 'right')
    editDisable: mad.createButton(_t_('section_disable_edit')).addClass('section-edit-disable').css('float', 'right')
    subTag: jQuery('<p>').addClass('mm-sec-sub').text(sub)
    segsDiv: jQuery('<div>').append(addSegmentButton())
    playSecAudioBtn: mad.createButton(_t_('play_section_audio')).addClass('mm-section-preview')
    playSecFirstBtn: mad.createButton(_t_('play_section_as_first')).addClass('mm-section-preview')
    playSecLastBtn: mad.createPriButton(_t_('play_section_as_last')).addClass('mm-section-select')
    playSecCancelBtn: mad.createDangerButton(_t_('play_section_cancel')).addClass('mm-section-select')
    editSecBtn: mad.createPriButton(_t_('edit_section')).addClass('mm-section-edit')
    addSecBtn: mad.createPriButton(_t_('new_section')).addClass('mm-section-insert')
    delSecBtn: mad.createDangerButton(_t_('del_section')).addClass('mm-section-edit')
    delConfirmBtn: mad.createDangerButton(_t_('del')).addClass('confirm-hidden')

    sec: jQuery('<div>').addClass('mm-section').addClass('in-edit').
                         append(nameTag).
                         append(startTag).
                         append(editEnable).
                         append(editDisable).
                         append(subTag).
                         append(segsDiv).
                         append(jQuery('<hr>').addClass('edit-sec-sep')).
                         append(playSecAudioBtn).
                         append(playSecFirstBtn).
                         append(playSecLastBtn).
                         append(playSecCancelBtn).
                         append(editSecBtn).
                         append(addSecBtn).
                         append(delSecBtn).
                         append(delConfirmBtn)[0]
    sec.name: name
    sec.start: start
    sec.sub: sub
    sec.addSegment: (s, trigger):
        delBtn: mad.createDangerButton(_t_('del')).addClass('mm-segment-del').click(():
            me: jQuery(@)
            me.prev().remove()
            me.next().remove()
            me.remove()
        )
        if trigger
            jQuery(s).insertAfter(trigger)
            delBtn.insertAfter(s)
            return addSegmentButton().insertAfter(delBtn)
        segsDiv.append(s).append(delBtn).append(addSegmentButton())

    unsetSelecting: (): jQuery('.mm-section').removeClass('mm-section-selecting')
    editEnable.click(():
        unsetSelecting()
        jQuery(sec).addClass('in-edit').children().last().addClass('confirm-hidden')
    )
    editDisable.click(():
        unsetSelecting()
        jQuery(sec).removeClass('in-edit').children().last().addClass('confirm-hidden')
    )

    playSecAudioBtn.click((): mad.player.audio(proj.getAudioPath(), proj.getOutputPath(), sec.start, sec.duration()))
    latterSections: (): jQuery(sec).find('~ .mm-section')
    playSecFirstBtn.click(():
        unsetSelecting()
        jQuery(sec).addClass('mm-section-selecting')
        latterSections().removeClass('in-edit').addClass('mm-section-selecting')
    )
    playSecLastBtn.click(():
        saveCurrentProjct()
        latterSections().removeClass('mm-section-selecting')
        mad.player.section(jQuery('.mm-section-selecting') |: $, %)
        unsetSelecting()
    )
    playSecCancelBtn.click(unsetSelecting)

    editSecBtn.click(():
        mad.edit.editSection(sec, proj.getAudioPath(), proj.getOutputPath(), %r)
        if r
            sec.name: r.name
            sec.start: r.start
            sec.sub: r.sub
            nameTag.text(r.name)
            startTag.text(mad.formatTime(r.start))
            subTag.text(r.sub)

            if r.end != sec.end()
                jQuery(newSection(_t_('auto_created_section_name_prefix') + r.end,
                                  r.end, '')
                       ).insertAfter(sec)

            saveCurrentProjct()
    )
    addSecBtn.click(():
        mad.edit.createSection(sec, proj.getAudioPath(), proj.getOutputPath(), %r)
        if r = null
            return
        nextStart: sec.end()
        newSec: jQuery(newSection(r.name, r.start, r.sub))
        newSec.addClass('in-edit')
        newSec.insertAfter(sec)
        jQuery(sec).removeClass('in-edit')

        if r.end != nextStart
            jQuery(newSection(_t_('auto_created_section_name_prefix') + r.end,
                              r.end, '')
                   ).insertAfter(newSec)

        saveCurrentProjct()
    )
    delSecBtn.click((): jQuery(@).next().toggleClass('confirm-hidden'))
    delConfirmBtn.click((): jQuery(@).parent().remove())

    sec.nextSection: (): jQuery(@).next()[0]
    sec.prevSection: (): jQuery(@).prev()[0]
    sec.duration: ():
        next: @nextSection()
        if next
            return next.start - @start
        return workspace.audioLen - @start
    sec.end: (): @start + @duration()

    sec.segments: (): jQuery(sec).find('.mm-segment') |: $
    return sec

jQuery(document.body).ready(%)
jQuery('#workspace-tab').click(%e)

if jQuery('#workspace-tab').attr('aria-expanded') = 'true'
    return

jQuery('#save-workspace').hide()
mad.projects.save(%%)

proj: jQuery('#projs :radio:checked')[0].project

jQuery('#ws-placeholder').remove()
workspace: jQuery('#ws-panel').show()

jQuery('#ws-projname').text(proj.name)
segsCell: jQuery('#ws-segs').html('')
actionCell: jQuery('#ws-action')

jQuery('#ws-audio-path').text(proj.getAudioPath())
jQuery('#ws-video-path').text(proj.getVideoPath())

workspace.audioLen: getAVLen(proj.getAudioPath(), %%)
if proj.getOutputPath() = ''
    return segsCell.text(_t_('empty_output_dir'))

jQuery.post('/seqc/touch', {path: proj.getOutputPath()}, %r)
if r != 'ok'
    return segsCell.text(_t_('bad_output_dir'))

if workspace.audioLen = -1
    return segsCell.text(_t_('bad_audio'))
jQuery('#ws-audio-len').text(mad.formatTime(workspace.audioLen))

workspace.videoList: getVideoMap(proj.getVideoPath(), %%)
if workspace.videoList.length = 0
    return segsCell.text(_t_('bad_video_dir'))
workspace.videoList.sort((a, b): a.epnum - b.epnum)
mad.edit.syncEpnums(workspace.videoList |: $.epnum)

getSequence(proj.getOutputPath(), %%) |:
    sec: newSection($.name, $.start, $.sub)
    segsCell.append(sec)
    $.segments |: sec.addSegment(newSegment($.epnum, $.start, $.duration, $.filters, sec))

jQuery('#save-workspace').show()

func saveCurrentProjct()
    jQuery.post('/seqc/save', {
        path: proj.getOutputPath(),
        sections: JSON.stringify(jQuery('.mm-section') |: {
            name: $.name,
            start: $.start,
            segments: $.segments() |: $.tojson()
        }),
    }, %r)

export mad.workspace.save: saveCurrentProjct
export mad.workspace.findSourceByEpnum: (epnum): (workspace.videoList |:
    if $.epnum = epnum
        $result.push($.path)
)[0]
export mad.workspace.getOutputPath: (): proj.getOutputPath()
export mad.workspace.getAudioPath: (): proj.getAudioPath()
export mad.workspace.getVideoPath: (): proj.getVideoPath()
export mad.workspace.audioLen: (): workspace.audioLen
